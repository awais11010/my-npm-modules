https://ydf.readthedocs.io/en/latest/js_serving.html

# Install the CLI API. See "CLI API / Quick Start" or " CLI API / Install" sections for more details.
wget https://github.com/google/yggdrasil-decision-forests/releases/download/1.0.0/cli_linux.zip
unzip cli_linux.zip

# Train the model (see Quick Start)
./train ... --output=model

# Remove the meta-data from the model (makes the model smaller)
./edit_model --input=/tmp/model --output=/tmp/model_pure --pure_serving=true

# Zip the model.
zip -j /tmp/model.zip /tmp/model_pure/*

# Warning: The model zip file should be a flat zip file: The model files should be located at the root of the zip file. If using the zip tool, a flat file can be created with the -j option.

# /tmp/model.zip can be used directly in Javascript.

////////////////

https://github.com/google/yggdrasil-decision-forests/releases

Download the latest version of the YDF Javascript library on the Yggdrasil release page. For example, this is the YDF Javascript library for YDF 0.2.5.

The files of your webpage can be structured as follows:

    index.html : The webpage running the model (see step 3).

    model.zip : The model created in step 1.

    ydf/ :The content of the zip file downloaded above.

        inference.js

        inference.wasm

//////////////
page:

<!-- Yggdrasil Decision Forests -->
<script src="ydf/inference.js"></script>

<!-- JSZip -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.10.0/jszip.min.js"></script>

<script>
let ydf = null;
YggdrasilDecisionForests().then(function (m) {
  ydf = m;
  console.log("The library is loaded and ready to be used!");

  let model = null;
  ydf.loadModelFromUrl("model.zip").then((loadedModel) => {
    model = loadedModel;
    console.log("The model is loaded");

    let examples = {
      feature_1: [1, null, 3], // "null" represents a missing value.
      feature_2: ["cat", "dog", "tiger"],
      };
    let predictions = model.predict(examples);

    //after we are done w the model...
    model.unload();
    model = null;

  });

});
</script>

//jszip hack:
//npm install node-fetch@2.6.8 + jszip@3.10.1
//inference.js -- prepend: var fetch = require('node-fetch'); var JSZip = require("jszip");
//next
//jszip/lib/utils.js
//install cross-blob@2.0.0 and prepend: var Blob = require('cross-blob');
//comment out line 41 -- //exports.checkSupport("blob");

